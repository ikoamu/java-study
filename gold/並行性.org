* 並行性
** 並行処理ユーティリティ
   - 並行処理プログラミングにおける様々なユーティリティ機能を実装するライブラリ群
*** ~java.util.concurrentパッケージ~ とそのサブパッケージ
    - java.util.concurrent
      - java.util.concurrent.atomic
      - java.util.concurrent.locks
*** 並行処理ユーティリティが提供する仕組みや機能
**** スレッド・プール
     - アプリケーションで必要となるスレッドをあらかじめ生成し、プールしておく仕組み
     - スレッド生成におけるオーバーヘッドを軽減し、スレッドの管理性を向上させる
     - ~Executorフレームワーク~ が提供する
**** 並行コレクション
     - ~並行コレクション~ はパフォーマンスを最適化し、複数スレッドからの並行アクセスを前提に、高いスループットを実現できるように設計されている
**** アトミック変数
     - アトミック＝原子性
     - all or nothing
     - ~java.util.concurrent.atomicパッケージ~ によって提供される一連のクラス群は、ステートに対する処理がアトミックであることを保証する
**** カウンティング・セマフォ
***** セマフォ
      - 有限のリソースに対して並行的にアクセスするスレッド間における同期や割り込み制御に用いられる仕組み
      - セマフォには大きく分けて2つの方式がある
***** バイナリ・セマフォ
      - リソースに対するアクセスが「可能」か「不可能」の2択
***** カウンティング・セマフォ
      - アクセス可能なリソース数を任意に設定する
      - ~java.util.concurrent.Semaphore~ によって提供
** アトミック変数
   | クラス          | 説明                                                |
   | AtomicBoolean   | アトミック変数としてboolean型の値を扱うためのクラス |
   | AtomicInteger   | アトミック変数としてint型の値を扱うためのクラス     |
   | AtomicLong      | アトミック変数としてlong型の値を扱うためのクラス    |
   | AtomicRederence | アトミック変数として参照を扱うためのクラス          |
*** AtomicIntegerクラスの主なメソッド
    | メソッド                 | 説明                                                           |
    | int addAndGet(int delta) | 指定された値を現在の値にアトミックに追加後、その値を取得する   |
    | int decrementAndGet()    | 現在の値を1だけアトミックに減分後、その値を取得する            |
    | int get()                | 現在の値を取得する                                             |
    | int getAndAdd(int delta) | 現在の値を取得後、指定された値を現在の値にアトミックに追加する |
    | int getAndIncrement()    | |                                                               |
** 並行コレクション・インタフェース
   | クラス                 | 説明                                                                |
   | BlockingDeque          | 要素の格納や取得の際に待機して処理をブロックする機能を備えたDeque   |
   | BlockingQueue          | 要素の格納や取得の際に待機して処理をブロックする機能を備えたQueue   |
   | ConcurrentMap          | スレッドの安全性と原子性の保証を提供するMap                         |
   | ConcurrentNavigableMap | NavigableオペレーションをサポートするConcurrentMap                  |
   | TransferQueue          | コンシューマが要素を受け取るまでプロデューサが待機するBlockingQueue |
** 
** CyclicBarrier
